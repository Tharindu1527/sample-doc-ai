from datetime import datetime, date
from typing import Optional, List
from pydantic import BaseModel, Field, ConfigDict

class Patient(BaseModel):
    patient_id: str = Field(..., description="Unique patient identifier")
    first_name: str = Field(..., description="Patient's first name")
    last_name: str = Field(..., description="Patient's last name")
    email: Optional[str] = Field(None, description="Email address")
    phone: Optional[str] = Field(None, description="Phone number")
    date_of_birth: Optional[date] = Field(None, description="Date of birth")
    gender: Optional[str] = Field(None, description="Gender")
    address: Optional[str] = Field(None, description="Street address")
    city: Optional[str] = Field(None, description="City")
    state: Optional[str] = Field(None, description="State/Province")
    zip_code: Optional[str] = Field(None, description="ZIP/Postal code")
    emergency_contact_name: Optional[str] = Field(None, description="Emergency contact name")
    emergency_contact_phone: Optional[str] = Field(None, description="Emergency contact phone")
    medical_history: Optional[List[str]] = Field(default_factory=list, description="Medical history")
    allergies: Optional[List[str]] = Field(default_factory=list, description="Known allergies")
    medications: Optional[List[str]] = Field(default_factory=list, description="Current medications")
    insurance_provider: Optional[str] = Field(None, description="Insurance provider")
    insurance_id: Optional[str] = Field(None, description="Insurance ID number")
    notes: Optional[str] = Field(None, description="Additional notes")
    is_active: bool = Field(default=True, description="Active status")
    created_at: datetime = Field(default_factory=datetime.utcnow)
    updated_at: datetime = Field(default_factory=datetime.utcnow)

    model_config = ConfigDict(
        populate_by_name=True,
        arbitrary_types_allowed=True
    )

class PatientCreate(BaseModel):
    first_name: str = Field(..., description="Patient's first name")
    last_name: str = Field(..., description="Patient's last name")
    email: Optional[str] = Field(None, description="Email address")
    phone: Optional[str] = Field(None, description="Phone number")
    date_of_birth: Optional[date] = Field(None, description="Date of birth")
    gender: Optional[str] = Field(None, description="Gender")
    address: Optional[str] = Field(None, description="Street address")
    city: Optional[str] = Field(None, description="City")
    state: Optional[str] = Field(None, description="State/Province")
    zip_code: Optional[str] = Field(None, description="ZIP/Postal code")
    emergency_contact_name: Optional[str] = Field(None, description="Emergency contact name")
    emergency_contact_phone: Optional[str] = Field(None, description="Emergency contact phone")
    medical_history: Optional[List[str]] = Field(default_factory=list, description="Medical history")
    allergies: Optional[List[str]] = Field(default_factory=list, description="Known allergies")
    medications: Optional[List[str]] = Field(default_factory=list, description="Current medications")
    insurance_provider: Optional[str] = Field(None, description="Insurance provider")
    insurance_id: Optional[str] = Field(None, description="Insurance ID number")
    notes: Optional[str] = Field(None, description="Additional notes")
    is_active: bool = Field(default=True, description="Active status")

class PatientUpdate(BaseModel):
    first_name: Optional[str] = Field(None, description="Patient's first name")
    last_name: Optional[str] = Field(None, description="Patient's last name")
    email: Optional[str] = Field(None, description="Email address")
    phone: Optional[str] = Field(None, description="Phone number")
    date_of_birth: Optional[date] = Field(None, description="Date of birth")
    gender: Optional[str] = Field(None, description="Gender")
    address: Optional[str] = Field(None, description="Street address")
    city: Optional[str] = Field(None, description="City")
    state: Optional[str] = Field(None, description="State/Province")
    zip_code: Optional[str] = Field(None, description="ZIP/Postal code")
    emergency_contact_name: Optional[str] = Field(None, description="Emergency contact name")
    emergency_contact_phone: Optional[str] = Field(None, description="Emergency contact phone")
    medical_history: Optional[List[str]] = Field(None, description="Medical history")
    allergies: Optional[List[str]] = Field(None, description="Known allergies")
    medications: Optional[List[str]] = Field(None, description="Current medications")
    insurance_provider: Optional[str] = Field(None, description="Insurance provider")
    insurance_id: Optional[str] = Field(None, description="Insurance ID number")
    notes: Optional[str] = Field(None, description="Additional notes")
    is_active: Optional[bool] = Field(None, description="Active status")

class PatientResponse(BaseModel):
    id: str = Field(..., description="Patient ID")
    patient_id: str = Field(..., description="Unique patient identifier")
    first_name: str = Field(..., description="Patient's first name")
    last_name: str = Field(..., description="Patient's last name")
    email: Optional[str] = Field(None, description="Email address")
    phone: Optional[str] = Field(None, description="Phone number")
    date_of_birth: Optional[date] = Field(None, description="Date of birth")
    gender: Optional[str] = Field(None, description="Gender")
    address: Optional[str] = Field(None, description="Street address")
    city: Optional[str] = Field(None, description="City")
    state: Optional[str] = Field(None, description="State/Province")
    zip_code: Optional[str] = Field(None, description="ZIP/Postal code")
    emergency_contact_name: Optional[str] = Field(None, description="Emergency contact name")
    emergency_contact_phone: Optional[str] = Field(None, description="Emergency contact phone")
    medical_history: Optional[List[str]] = Field(None, description="Medical history")
    allergies: Optional[List[str]] = Field(None, description="Known allergies")
    medications: Optional[List[str]] = Field(None, description="Current medications")
    insurance_provider: Optional[str] = Field(None, description="Insurance provider")
    insurance_id: Optional[str] = Field(None, description="Insurance ID number")
    notes: Optional[str] = Field(None, description="Additional notes")
    is_active: bool = Field(..., description="Active status")
    created_at: datetime = Field(..., description="Creation timestamp")
    updated_at: datetime = Field(..., description="Last update timestamp")

    model_config = ConfigDict(from_attributes=True)